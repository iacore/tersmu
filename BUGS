All known divergence from CLL prescription, or from plausible interpretations
thereof, is noted here.

Definite bugs:
    ka can't handle multiple ce'u (should return a relation)

    Only the simplest {goi} phrases, those of the form {[sumti] goi ko'a}, are
    currently handled.

    Implicit {ke'a} and {ce'u} aren't eliminated when they are given
    explicitly in a nested context - e.g. we currently have:
    ro da poi ro de poi ke'a broda ke'a xi re cu brode cu brodi
    Prop:FA x1:(FA x2:(broda(_,_2)). brode(x2,_)). brodi(x1)
    jbo: ro da poi ro de poi ke'a broda ke'a xi re ku'o zo'u de brode ke'a
    ku'o zo'u da brodi

Probably bugs:
    Current gadri (non)-handling is probably inconsistent with xorlo.

    We don't handle donkey anaphora, and so are not in accordance with the
    CLL. For example, we have
	> ro ponse be su'o xasli cu darxi ri
	Prop:FA x1:(EX x2:(xasli(_)). ponse(_,x2)). darxi(x1,x1)
    , which contradicts CLL:7.6.

    We have the first part of a guhek being a selbri3 rather than an arbitrary
    selbri. That's because I don't see a sensible way to deal with things like
    {gu'e broda co brode gi brodi ko'a}

    We have
	> na ku mi noi brode cu broda
	Prop:!(brode(mi) /\ broda(mi))
    this being forced if we're to avoid scope-breaking, since consider:
	> na ku da ro broda be da ku noi brodi cu brodu
	Prop:!EX x1. FA x2:(broda(_,x1)). (brodu(x1,x2) /\ brodi(x2)) .
    xorxes thinks {noi}-phrases should be separated out as new statements, with
    their own separate illocutionary power (default: claim), and if {ke'a} is
    often donkey then we should deal with it as we deal with any donkey.
    I suspect he's right.

Possibly bugs:
    Quantifiers on bound variables are ignored. This is contrary to
    CLL:16.14.1-2. But I don't see how to make sense of what's specified
    there. (xorxes suggests that {PA da} when {da} is already bound should be
    treated as introducing a new quantifier, with subsequent {da} in its
    scope.

    Seltau are considered to be unary predicates rather than higher arity
    relations.

    According to CLL:16.11.14, bridi negation scopes over the prenex... but I
    don't see how to sensibly extend that to arbitrary statements, so I'm
    ignoring it.
    c.f. http://www.lojban.org/tiki/BPFK+Section%3A+brivla+Negators and links
    therefrom.
    Meanwhile, that BPFK section on brivla negation currently states that {na}
    "has scope over quantifiers that follow". Currently that's how I have
    {na ku} working, but not bare {na}.

    Termset quantification: CLL:16.7.5 has quantifiers in the same termset
    having "equal scope", but I don't understand what this means.

    We treat {broda zo'e goi ko'a ko'a} as equivalent to {broda zo'e zo'e}.
